document.addEventListener('DOMContentLoaded', function() {
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirm_password');
    const showPassword = document.getElementById('show_password');
    const form = document.getElementById('registerForm');
    const submitButton = document.querySelector('.crt_acc_btn');
    const inputs = form.querySelectorAll('input:not([type="checkbox"]):not([maxlength="1"])'); // Exclude OTP inputs

    const leftFormDiv = document.querySelector(".left_form_div");
    const digitInputDiv = document.getElementById("digitInputDiv");
    const otpInputs = digitInputDiv.querySelectorAll('input[type="text"]');
    const otpLabel = document.createElement('span');
    otpLabel.textContent = 'Enter OTP';
    otpLabel.classList.add('otp_label');

    // Function to generate a random 6-digit OTP
    function generateOTP() {
        return Math.floor(100000 + Math.random() * 900000).toString();
    }

    const autoGeneratedOTP = generateOTP();
    console.log('Auto-generated OTP:', autoGeneratedOTP); // Print OTP to console

    showPassword.addEventListener('change', () => {
        const type = showPassword.checked ? 'text' : 'password';
        [password, confirmPassword].forEach(field => field.type = type);
    });

    inputs.forEach(input => {
        input.addEventListener('input', validateForm);
    });

    function validateForm() {
        const allFilled = [...inputs].every(input => input.value.trim() !== '');
        const passwordsMatch = password.value === confirmPassword.value && password.value.length >= 8;
        const validPassword = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d!@#$%^&*()_+]{8,}$/;

        if (!passwordsMatch) {
            confirmPassword.classList.add('invalid');
        } else {
            confirmPassword.classList.remove('invalid');
        }

        submitButton.disabled = !(allFilled && passwordsMatch && password.value.match(validPassword));
        submitButton.style.cursor = submitButton.disabled ? 'not-allowed' : 'pointer';
        submitButton.style.pointerEvents = submitButton.disabled ? 'none' : 'auto';

        return submitButton.disabled;
    }

    submitButton.addEventListener("click", function() {
        if (!validateForm()) {
            // Hide the left form div
            leftFormDiv.style.display = 'none';

            // Show the digit input boxes
            digitInputDiv.classList.add('show-digits');

            // Display the OTP label
            leftFormDiv.appendChild(otpLabel); // Append instead of inserting after

            // Automatically check OTP after all boxes are filled
            checkOTP();
        }
    });

    function checkOTP() {
        const currentOTP = Array.from(otpInputs).map(input => input.value).join('');
        if (currentOTP.length === otpInputs.length) {
            if (currentOTP === autoGeneratedOTP) {
                alert("OTP is correct!");
            } else {
                alert("OTP is not matched!");
                otpInputs.forEach(input => {
                    input.classList.add('invalid');
                    input.animate([
                        { transform: 'translateX(-5px)' },
                        { transform: 'translateX(5px)' },
                        { transform: 'translateX(-5px)' },
                        { transform: 'translateX(5px)' },
                        { transform: 'translateX(0)' }
                    ], {
                        duration: 300,
                        iterations: 1
                    });
                });
            }
        }
    }

    otpInputs.forEach((input, index) => {
        input.addEventListener('input', function(e) {
            const value = e.target.value;
            if (!/^\d$/.test(value)) {
                e.target.value = '';
                return;
            }
            e.target.style.borderColor = 'green';
            checkOTP(); // Trigger OTP check

            // Move to the next input box automatically
            if (value !== '' && index < otpInputs.length - 1) {
                otpInputs[index + 1].focus();
            }
        });

        input.addEventListener('keydown', function(e) {
            if (e.key === 'Backspace' && e.target.value === '') {
                if (index > 0) {
                    otpInputs[index - 1].focus();
                }
            }
        });
    });
});




document.addEventListener('DOMContentLoaded', function() {
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirm_password');
    const form = document.getElementById('registerForm');
    const submitButton = document.getElementById('createAccountBtn');
    const inputs = form.querySelectorAll('input:not([type="checkbox"])');

    // Function to check if all inputs are filled
    function allInputsFilled() {
        return Array.from(inputs).every(input => input.value.trim() !== '');
    }

    // Function to check if passwords match
    function passwordsMatch() {
        return password.value === confirmPassword.value && password.value.length >= 8;
    }

    // Function to update button style based on validation
    function updateButtonStyle() {
        if (allInputsFilled() && passwordsMatch()) {
            submitButton.disabled = false;
            submitButton.style.backgroundColor = 'green';
        } else {
            submitButton.disabled = true;
            submitButton.style.backgroundColor = ''; // Reset to default color
        }
    }

    // Event listeners for input fields
    inputs.forEach(input => {
        input.addEventListener('input', updateButtonStyle);
    });

    // Initial button style update
    updateButtonStyle();

    // Event listener for form submission
    form.addEventListener('submit', function(event) {
        // Prevent form submission if validation fails
        if (!allInputsFilled() || !passwordsMatch()) {
            event.preventDefault();
            // Optionally, you can display an error message here
            console.log("Please fill all fields and ensure passwords match.");
        }
    });
});